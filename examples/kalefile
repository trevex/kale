helm = require('helm', { 'version': '>=2.11.0' })
kubectl = require('kubectl', { 'version': '>=1.11.0' })

dependency(
    git = '...',
    tag = 'v0.4.0',
    rename = 'different'
    enable_if = 'other.enabled'
)

dependency(
    dir = '$pkg_dir/other',
    passive = true # allows triggering by hand
)

def deploy(params):
    manifests = helm.template(chart, global.namespace, params.values)
    kubectl.apply(manifests, dry_run=true)

target(deploy, params = {
    'values': schema.Filename(required = true)
})

# how do params work?
# * params can be provided via:
#   * config file (subsections with dependency name to forward params to dependency)
#   * flags (where dependency name and a dash will be prepended)
#   * environment variables (prepend s.a.)
# * params are typesafe and are checked via schema
# * there are some default flags and variables, that are reserved and cannot be used => global
#
# good examples:
# * grafana with custom dashboards (via `rsync` into volume?)
# * scaling down etcd or cockroachdb
